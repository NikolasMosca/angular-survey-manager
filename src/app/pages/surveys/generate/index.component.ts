import { SurveyService } from 'src/app/services/survey/survey.service';
import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { MatSnackBar } from '@angular/material/snack-bar';

@Component({
  selector: 'app-index',
  templateUrl: './index.component.html',
  styleUrls: ['./index.component.scss']
})
export class SurveysGenerateComponent {
  route = {
    undo: () => `/surveys`
  }

  data = {
    type : "boolean",
    amount : 10,
    category : "",
    difficulty : ""
  }

  categories = [
    { value: '', name: 'Any category' },
    { value: '9', name: 'General Knowledge' },
    { value: '10', name: 'Entertainment: Books' },
    { value: '11', name: 'Entertainment: Film' },
    { value: '12', name: 'Entertainment: Music' },
    { value: '13', name: 'Entertainment: Musicals & Theatres' },
    { value: '14', name: 'Entertainment: Television' },
    { value: '15', name: 'Entertainment: Video Games' },
    { value: '16', name: 'Entertainment: Board Games' },
    { value: '17', name: 'Science & Nature' },
    { value: '18', name: 'Science: Computers' },
    { value: '19', name: 'Science: Mathematics' },
    { value: '20', name: 'Mythology' },
    { value: '21', name: 'Sports' },
    { value: '22', name: 'Geography' },
    { value: '23', name: 'History' },
    { value: '24', name: 'Politics' },
    { value: '25', name: 'Art' },
    { value: '26', name: 'Celebrities' },
    { value: '27', name: 'Animals' },
    { value: '28', name: 'Vehicles' },
    { value: '29', name: 'Entertainment: Comics' },
    { value: '30', name: 'Science: Gadgets' },
    { value: '31', name: 'Entertainment: Japanese Anime & Manga' },
    { value: '32', name: 'Entertainment: Cartoon & Animations' },
  ]

  difficulties = [
    { value: '', name: 'Any Difficulty' },
    { value: 'easy', name: 'Easy' },
    { value: 'medium', name: 'Medium' },
    { value: 'hard', name: 'Hard' },
  ]

  constructor(private surveyService: SurveyService, private router: Router, private snackBar: MatSnackBar) { }

  async onSave() {
    const id = this.surveyService.generateKey()
    const response: any = await this.surveyService.generateQuestions(this.data)

    this.surveyService.saveSurvey({
      id,
      title: `Survey generated by Trivia ${id}`,
      questions: response.results.map(({question, type, correct_answer, incorrect_answers}) => {
        const answers = [correct_answer, ...incorrect_answers]
          .map(answer => ({title: answer}))
          .sort(() => Math.random() - 0.5)
        return {
          title: question,
          type: 'single',
          options: type === 'boolean' ? [{title: 'Yes'}, {title: 'No'}] : answers,
          correctAnswer: type === 'boolean' ? (
            correct_answer === 'True' ? [0] : [1]
          ) : [answers.findIndex(answer => answer.title === correct_answer)]
        }
      })
    })

    this.snackBar.open('Survey generated!', 'Undo', {
      duration: 3000
    });
    this.router.navigateByUrl(this.route.undo())
  }

}
